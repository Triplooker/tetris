#!/bin/bash

download_node() {
  echo "–ù–∞—á–∏–Ω–∞—é —É—Å—Ç–∞–Ω–æ–≤–∫—É –Ω–æ–¥—ã —á–µ—Ä–µ–∑ Docker..."

  # –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
  echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
  sudo apt-get remove docker docker-engine docker.io containerd runc || true
  sudo apt-get update
  sudo apt-get install -y \
    ca-certificates \
    curl \
    gnupg \
    wget
  
  sudo install -m 0755 -d /etc/apt/keyrings
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  sudo chmod a+r /etc/apt/keyrings/docker.gpg

  echo \
    "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
    "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

  sudo apt-get update
  sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Ollama
  echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Ollama..."
  curl -fsSL https://ollama.com/install.sh | sh
  
  # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ Ollama
  echo "–ó–∞–ø—É—Å–∫–∞—é —Å–µ—Ä–≤–∏—Å Ollama..."
  systemctl start ollama || ollama serve &
  sleep 10  # –î–∞–µ–º –≤—Ä–µ–º—è Ollama –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è

  # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ infera
  wget -O infera "https://drive.google.com/uc?id=1VSeI8cXojdh78H557SQJ9LfnnaS96DT-&export=download&confirm=yes"
  chmod +x infera

  # –°–æ–∑–¥–∞–Ω–∏–µ Dockerfile
  cat <<EOF > Dockerfile
FROM ubuntu:24.04
RUN apt-get update && apt-get install -y \
    curl git nano make gcc build-essential jq screen \
    ca-certificates gcc unzip lz4 wget bison software-properties-common \
    && apt-get clean
COPY infera /usr/local/bin/infera
RUN chmod +x /usr/local/bin/infera
CMD ["infera"]
EOF

  # –°–±–æ—Ä–∫–∞ Docker-–æ–±—Ä–∞–∑–∞
  docker build -t infera-node .

  # –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º network=host
  docker run -d --name infera-node --network="host" infera-node

  echo "–ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏ –∑–∞–ø—É—â–µ–Ω–∞ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ Docker!"
}

check_points() {
  total_points=$(curl -s http://localhost:11025/points | jq)
  echo -e "–£ –≤–∞—Å —Å—Ç–æ–ª—å–∫–æ –ø–æ–∏–Ω—Ç–æ–≤: $total_points"
}

watch_secrets() {
  curl -s http://localhost:11025/node_details | jq
}

check_logs() {
  docker logs --tail 100 infera-node
}

restart_node() {
  echo "–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—é –Ω–æ–¥—É..."
  docker restart infera-node
  echo "–ù–æ–¥–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞."
}

update_node() {
  echo "–ù–∞—á–∏–Ω–∞—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–¥—ã..."

  # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
  docker stop infera-node && docker rm infera-node

  # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –æ–±—Ä–∞–∑
  docker rmi infera-node

  # –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞
  download_node
}

delete_node() {
  read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É? (–Ω–∞–∂–º–∏—Ç–µ y –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è): " confirm
  if [[ "$confirm" == "y" ]]; then
    echo "–£–¥–∞–ª—è—é –Ω–æ–¥—É..."
    docker stop infera-node && docker rm infera-node
    docker rmi infera-node
    rm -f infera Dockerfile
    echo "–ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞."
  else
    echo "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞."
  fi
}

exit_from_script() {
  exit 0
}

while true; do
  echo -e "\n\n–ú–µ–Ω—é:"
  echo "1. üå± –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
  echo "2. üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∫–æ–ª—å–∫–æ –ø–æ–∏–Ω—Ç–æ–≤"
  echo "3. üìÇ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–∞–Ω–Ω—ã–µ"
  echo "4. üï∏Ô∏è –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏"
  echo "5. üç¥ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–¥—É"
  echo "6. üîÑ –û–±–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
  echo "7. ‚ùå –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É"
  echo -e "8. üö™ –í—ã–π—Ç–∏ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞\n"
  read -p "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é: " choice

  case $choice in
    1)
      download_node
      ;;
    2)
      check_points
      ;;
    3)
      watch_secrets
      ;;
    4)
      check_logs
      ;;
    5)
      restart_node
      ;;
    6)
      update_node
      ;;
    7)
      delete_node
      ;;
    8)
      exit_from_script
      ;;
    *)
      echo "–ù–µ–≤–µ—Ä–Ω—ã–π –ø—É–Ω–∫—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ü–∏—Ñ—Ä—É –≤ –º–µ–Ω—é."
      ;;
  esac
done
